{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "https://raw.githubusercontent.com/ScratchAddons/manifest-schema/master/1/1.2.json",
	"title": "Scratch Addons addon manifest",
	"description": "The manifest that describes an addon.",
	"type": "object",
	"properties": {
		"$schema": {
			"type": "string",
			"description": "The URL to the schema."
		},
		"name": {
			"type": "string",
			"description": "The name of the addon. Don't make it too long."
		},
		"description": {
			"type": "string",
			"description": "The description of the addons. Any credits and attributions also belong here."
		},
		"tags": {
			"type": "array",
			"description": "Tags which are used for filtering and badges on the Scratch Addons settings page.",
			"items": {
				"type": "string",
				"description": "A tag.",
				"enum": ["community", "editor", "theme", "beta", "recommended", "forums"]
			},
			"minItems": 1
		},
		"permissions": {
			"type": "array",
			"description": "You can specify permissions by providing a \"permissions\" array.",
			"items": {
				"type": "string",
				"description": "A permission.",
				"enum": ["notifications", "badge", "clipboardWrite"]
			},
			"minItems": 1
		},
		"persistentScripts": {
			"type": "array",
			"description": "You can add persistent scripts by providing a \"persistent_scripts\" array conformed of JS files (e.g. [\"example.js\"]).",
			"items": {
				"type": "string",
				"description": "The path to the persistent script.",
				"pattern": "\\.js$"
			},
			"minItems": 1
		},
		"userscripts": {
			"type": "array",
			"description": "You can add userscripts by providing a \"userscripts\" array.\nUnlike persistent scripts, this is an array of objects, not strings.\nEach object must specify the url to the userscript through the \"url\" property, and provide an array of URL matches.",
			"items": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"description": "The path to the userscript.",
						"pattern": "\\.js$"
					},
					"matches": {
						"type": "array",
						"description": "An array that contains URL match rules. The script will execute if it matches any of the rules.",
						"items": {
							"type": "string",
							"description": "An URL match rule."
						}
					},
					"runAtComplete": {
						"type": "boolean",
						"description": "Determines whether the addon should be run after the document is complete loading."
					},
					"settingMatch": {
						"type": "object",
						"description": "You can provide a \"settingMatch\" object that will result in your userscript/userstyle only running if the specified option is set to the specified value.",
						"properties": {
							"id": {
								"type": "string",
								"description": "The identifier of the option."
							},
							"value": {
								"type": ["boolean", "integer", "string"],
								"description": "The value of the option."
							}
						}
					}
				},
				"required": ["url", "matches"],
				"additionalProperties": false
			},
			"minItems": 1
		},
		"userstyles": {
			"type": "array",
			"description": "Similarly to userscripts, you can specify a \"userstyles\" array.\nEach object must specify the url to the stylesheet through the \"url\" property, and provide an array of URL matches.",
			"items": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string",
						"description": "The path to the userstyle.",
						"pattern": "\\.css$"
					},
					"matches": {
						"type": "array",
						"description": "An array that contains URL match rules. The script will execute if it matches any of the rules.",
						"items": {
							"type": "string",
							"description": "An URL match rule."
						}
					},
					"settingMatch": {
						"type": "object",
						"description": "You can provide a \"setting_match\" object that will result in your userscript/userstyle only running if the specified option is set to the specified value.",
						"properties": {
							"id": {
								"type": "string",
								"description": "The identifier of the option."
							},
							"value": {
								"type": ["boolean", "integer", "string"],
								"description": "The value of the option."
							}
						}
					}
				},
				"required": ["url", "matches"],
				"additionalProperties": false
			},
			"minItems": 1
		},
		"options": {
			"type": "array",
			"description": "Options allow the addon's users to specify settings in Scratch Addons' settings panel. Inside your persistent scripts and userscripts, you can then access those settings with the \"addon.settings\" API.\nSpecify an \"options\" property and provide an array of option objects.",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "The name for the option."
					 },
					"id": {
						"type": "string",
						"description": "The identifier of the option to get the specified value from your code."
					},
					"type": {
						"type": "string",
						"description": "The type of the option",
						"enum": ["boolean", "positive_integer", "string", "select", "color"]
					},
					"default": {
						"type": ["boolean", "integer", "string"],
						"description": "The default value of the option."
					},
					"potential_values": {}
				},
				"allOf": [
					{
						"if": {
							"properties": { 
								"type": { 
									"const": "select" 
								} 
							}
						},
						"then": {
							"properties": {
								"potential_values": {
									"type": "array",
									"description": "The potential values for the select option.",
									"items": {
										"type": "string",
										"description": "A potential value for the select option."
									},
									"minItems": 1
								}
							},
							"required": ["potential_values"]
						}
					},
					{
						"if": {
							"properties": { 
								"type": { 
									"const": "color" 
								} 
							}
						},
						"then": {
							"properties": {
								"default": {
									"pattern": "^#([0-9a-fA-F]{3}){1,2}$"
								}
							}
						}
					}
				],
				"required": ["name", "id", "type", "default"],
				"additionalProperties": false
			},
			"minItems": 1
		},
		"credits": {
			"type": "array",
			"description": "An array containing credits to the authors/contributors of the addon.",
			"items": {
				"type": "object",
				"description": "A credited author/contributor.",
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the credited person."
					 },
					"link": {
						"type": "string",
						"description": "The link relevant to the credit.",
						"pattern": "^https?:\\/\\/?(?:[a-z0-9-]+\\.)*[0-9a-z_-]+(?:\\.[a-z]+)+\\/.*$"
					}
				},
				"required": ["name"],
				"additionalProperties": false
			},
			"minItems": 1
		},
		"enabledByDefault": {
			"type": "boolean",
			"description": "You can provide the \"enabled_by_default\" property and set it to true. Its default value is false.\nKeep in mind, few addons will be enabled by default. If you want your addon to be enabled by default, please open a discussion issue.",
			"default": false
		},
		"warning": {
			"type": "string",
			"description": "The warning that will be shown to users when using the addon."
		},
		"traps": {
			"type": "boolean",
			"description": "Determines whether traps are needed to run the addon."
		}
	},
	"required": ["name", "description", "tags"],
	"additionalProperties": false
}
